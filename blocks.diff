diff --git a/lib/vultr/resources/block_storage.rb b/lib/vultr/resources/block_storage.rb
index 2c7b02f..14b89c9 100644
--- a/lib/vultr/resources/block_storage.rb
+++ b/lib/vultr/resources/block_storage.rb
@@ -21,12 +21,12 @@ module Vultr
       delete_request("blocks/#{block_id}")
     end
 
-    def attach(block_id:, **params)
-      post_request("blocks/#{block_id}/attach", body: params)
+    def attach(block_id:)
+      post_request("blocks/#{block_id}/attach", body: {})
     end
 
-    def detach(block_id:, **params)
-      post_request("blocks/#{block_id}/detach", body: params)
+    def detach(block_id:)
+      post_request("blocks/#{block_id}/detach", body: {})
     end
   end
 end
diff --git a/test/fixtures/block_storage/attach.json b/test/fixtures/block_storage/attach.json
new file mode 100644
index 0000000..8fe1c06
--- /dev/null
+++ b/test/fixtures/block_storage/attach.json
@@ -0,0 +1,4 @@
+{
+  "instance_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
+  "live": true
+}
diff --git a/test/fixtures/block_storage/create.json b/test/fixtures/block_storage/create.json
new file mode 100644
index 0000000..6dad0e1
--- /dev/null
+++ b/test/fixtures/block_storage/create.json
@@ -0,0 +1,13 @@
+{
+  "block": {
+    "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
+    "date_created": "2020-10-10T01:56:20+00:00",
+    "cost": 5,
+    "status": "active",
+    "size_gb": 50,
+    "region": "ewr",
+    "attached_to_instance": "742c9913-d088-4d67-bc61-5a10e922fbd1",
+    "label": "Example Block Storage",
+    "mount_id": "ewr-example112233"
+  }
+}
diff --git a/test/fixtures/block_storage/detach.json b/test/fixtures/block_storage/detach.json
new file mode 100644
index 0000000..8fe1c06
--- /dev/null
+++ b/test/fixtures/block_storage/detach.json
@@ -0,0 +1,4 @@
+{
+  "instance_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
+  "live": true
+}
diff --git a/test/fixtures/block_storage/list.json b/test/fixtures/block_storage/list.json
new file mode 100644
index 0000000..f18dcd5
--- /dev/null
+++ b/test/fixtures/block_storage/list.json
@@ -0,0 +1,22 @@
+{
+  "blocks": [
+    {
+      "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
+      "date_created": "2020-10-10T01:56:20+00:00",
+      "cost": 5,
+      "status": "pending",
+      "size_gb": 50,
+      "region": "ewr",
+      "attached_to_instance": "742c9913-d088-4d67-bc61-5a10e922fbd1",
+      "label": "Example Block Storage",
+      "mount_id": "ewr-example112233"
+    }
+  ],
+  "meta": {
+    "total": 1,
+    "links": {
+      "next": "next",
+      "prev": "prev"
+    }
+  }
+}
diff --git a/test/fixtures/block_storage/retrieve.json b/test/fixtures/block_storage/retrieve.json
new file mode 100644
index 0000000..6dad0e1
--- /dev/null
+++ b/test/fixtures/block_storage/retrieve.json
@@ -0,0 +1,13 @@
+{
+  "block": {
+    "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
+    "date_created": "2020-10-10T01:56:20+00:00",
+    "cost": 5,
+    "status": "active",
+    "size_gb": 50,
+    "region": "ewr",
+    "attached_to_instance": "742c9913-d088-4d67-bc61-5a10e922fbd1",
+    "label": "Example Block Storage",
+    "mount_id": "ewr-example112233"
+  }
+}
diff --git a/test/vultr/resources/block_storage_test.rb b/test/vultr/resources/block_storage_test.rb
new file mode 100644
index 0000000..e9c2123
--- /dev/null
+++ b/test/vultr/resources/block_storage_test.rb
@@ -0,0 +1,85 @@
+# frozen_string_literal: true
+
+require "test_helper"
+
+class BlockStorageResourceTest < Minitest::Test
+  def test_list
+    stub = stub_request("blocks", response: stub_response(fixture: "block_storage/list"))
+    client = Vultr::Client.new(api_key: "fake", adapter: :test, stubs: stub)
+    blocks = client.block_storage.list
+
+    assert_equal Vultr::Collection, blocks.class
+    assert_equal Vultr::BlockStorage, blocks.data.first.class
+    assert_equal 1, blocks.total
+    assert_equal "next", blocks.next_cursor
+    assert_equal "prev", blocks.prev_cursor
+  end
+
+  def test_create
+    body = {region: "ewr", size_gb: 50, label: "Example Block Storage"}
+    stub = stub_request("blocks", method: :post, body: body, response: stub_response(fixture: "block_storage/create", status: 202))
+    client = Vultr::Client.new(api_key: "fake", adapter: :test, stubs: stub)
+    blocks = client.block_storage.create(**body)
+
+    assert_equal blocks.id, "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
+    assert_equal blocks.date_created, Time.parse("2020-10-10T01:56:20+00:00")
+    assert_equal blocks.cost, 5
+    assert_equal blocks.status, "active"
+    assert_equal blocks.size_gb, 50
+    assert_equal blocks.region, "ewr"
+    assert_equal blocks.attached_to_instance, "742c9913-d088-4d67-bc61-5a10e922fbd1"
+    assert_equal blocks.label, "Example Block Storage"
+    assert_equal blocks.mount_id, "ewr-example112233"
+  end
+
+  def test_retrieve
+    block_id = "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
+    body = {region: "ewr", size_gb: 50, label: "Example Block Storage"}
+    stub = stub_request("blocks/#{block_id}", body: body, response: stub_response(fixture: "block_storage/retrieve"))
+    client = Vultr::Client.new(api_key: "fake", adapter: :test, stubs: stub)
+    blocks = client.block_storage.retrieve(block_id: block_id)
+
+    assert_equal blocks.id, "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
+    assert_equal blocks.date_created, Time.parse("2020-10-10T01:56:20+00:00")
+    assert_equal blocks.cost, 5
+    assert_equal blocks.status, "active"
+    assert_equal blocks.size_gb, 50
+    assert_equal blocks.region, "ewr"
+    assert_equal blocks.attached_to_instance, "742c9913-d088-4d67-bc61-5a10e922fbd1"
+    assert_equal blocks.label, "Example Block Storage"
+    assert_equal blocks.mount_id, "ewr-example112233"
+  end
+
+  def test_update
+    block_id = "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
+    body = {size_gb: 50, label: "Example Block Storage"}
+    stub = stub_request("blocks/#{block_id}", method: :patch, body: body, response: {})
+    client = Vultr::Client.new(api_key: "fake", adapter: :test, stubs: stub)
+    
+    assert client.block_storage.update(block_id: block_id, **body)
+  end
+
+  def test_delete
+    block_id = "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
+    stub = stub_request("blocks/#{block_id}", method: :delete, response: {})
+    client = Vultr::Client.new(api_key: "fake", adapter: :test, stubs: stub)
+    
+    assert client.block_storage.delete(block_id: block_id)
+  end
+
+  def test_attach
+    block_id = "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
+    stub = stub_request("blocks/#{block_id}/attach", method: :post, response: stub_response(fixture: "block_storage/attach"))
+    client = Vultr::Client.new(api_key: "fake", adapter: :test, stubs: stub)
+    
+    assert client.block_storage.attach(block_id: block_id)
+  end
+
+  def test_detach
+    block_id = "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
+    stub = stub_request("blocks/#{block_id}/detach", method: :post, response: stub_response(fixture: "block_storage/detach"))
+    client = Vultr::Client.new(api_key: "fake", adapter: :test, stubs: stub)
+    
+    assert client.block_storage.detach(block_id: block_id)
+  end
+end
